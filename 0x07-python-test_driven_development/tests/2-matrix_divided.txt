>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[3, 2, 4]], 1)
[[3.0, 2.0, 4.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, -2, 3], [4, 5, -6]], -3)
[[-0.33, 0.67, -1.0], [-1.33, -1.67, 2.0]]
>>> matrix_divided(None, 4)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(None, None)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[3]], None)
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> matrix_divided([[]], 4)
[[]]
>>> matrix_divided([], 4)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [3]], 3)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2], [3, True]], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[]], 'i')
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> matrix_divided([[2, 3], [4, 5]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
