>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> lazy_matrix_mul()
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> lazy_matrix_mul([[3]],)
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
>>> lazy_matrix_mul(True, [[3]])
matrix([[3]])
>>> lazy_matrix_mul([[3]], "False")
matrix([[0]])
>>> lazy_matrix_mul([1, 2, 3], [[4, 5, 6]])
Traceback (most recent call last):
	...
ValueError: shapes (1,3) and (1,3) not aligned: 3 (dim 1) != 1 (dim 0)
>>> lazy_matrix_mul([[1, 2, 3]], [4, 5, 6])
Traceback (most recent call last):
	...
ValueError: shapes (1,3) and (1,3) not aligned: 3 (dim 1) != 1 (dim 0)
>>> lazy_matrix_mul([[]], [[1, 2, 3]])
Traceback (most recent call last):
	...
ValueError: shapes (1,0) and (1,3) not aligned: 0 (dim 1) != 1 (dim 0)
>>> lazy_matrix_mul([[3]], [])
matrix([], shape=(1, 0), dtype=float64)
>>> lazy_matrix_mul([[1, 2, '3']], [[1], [2], [3]])
Traceback (most recent call last):
	...
ValueError: data type must provide an itemsize
>>> lazy_matrix_mul([[1, 2, 3]], [[1], [2], ['a']])
Traceback (most recent call last):
	...
ValueError: data type must provide an itemsize
>>> lazy_matrix_mul([[1, 2, 3], [3]], [[1], [2], [3]])
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.
>>> lazy_matrix_mul([[1, 2, 3]], [[1, 3], [2], [3]])
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3,) + inhomogeneous part.
>>> lazy_matrix_mul([[1, 2, 3]], [[1], [2], [3], [4]])
Traceback (most recent call last):
	...
ValueError: shapes (1,3) and (4,1) not aligned: 3 (dim 1) != 4 (dim 0)
